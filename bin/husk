#!/usr/bin/env python

import husk
from husk.commands import init, add, workon, log, info, commit
from collections import OrderedDict
from argparse import ArgumentParser, ArgumentDefaultsHelpFormatter

# Top-level commands
commands = OrderedDict([
    ('init', init),
    ('add', add),
    ('workon', workon),
    ('commit', commit),
    ('info', info),
    ('log', log),
])

# Top-level argument parser
parser = ArgumentParser(description=husk.__doc__,
    version='Husk v{}'.format(husk.__version__),
    formatter_class=ArgumentDefaultsHelpFormatter)

# Add sub-parsers for each command
subparsers = parser.add_subparsers(dest='command')

# Populate subparsers
for key in commands:
    module = commands[key]
    parents = []
    if hasattr(module, 'parser'):
        parents = [module.parser]
    subparsers.add_parser(key, parents=parents, add_help=False,
        formatter_class=ArgumentDefaultsHelpFormatter)

# Parse command-line arguments
options = parser.parse_args()

# Get appropriate module
module = commands[options.command]

try:
    module.main(options)
except Exception, e:
    parser.error(e.message)
